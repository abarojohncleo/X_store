const express = require('express');
const cors = require('cors');
const { response, ENDPOINT_NOT_FOUND } = require('./src/core/response');
const mwResponse = require('./src/middlewares/response');
const mwHttpLogger = require('./src/middlewares/httpLogger');
const apiRoutes = require('./src/routes');

const app = express();

const swaggerJsDoc = require('swagger-jsdoc');
const swaggerUi = require('swagger-ui-express');

const ProjectOrion = {
  definition: {
    openapi: '3.0.0', // Specification (optional, defaults to swagger: '2.0')
    info: {
      description: 'Test API with autogenerated swagger doc',
      swagger: '2.0',
      title: 'PROJECT ORION API',
      version: '1.0.0',
    },
    servers: [
      {
        url: "http://localhost:3000/v1/newlos",
        description: "localhost"
      },
      {
        url: "https://new-los-api-dev.citysavings.com.ph/v1/newlos",
        description: "AWS"
      }
    ],
    security:[
      {
        ApiKeyAuth: []
      }
    ],
    components:{
      securitySchemes:{
        ApiKeyAuth: {
          type: 'apiKey',
          in: 'header',
          name: 'authToken'
        }
      }
    }
  },
  apis: ['./src/controllers/x_store.js'],
};

const swaggerDocsProjectOrion = swaggerJsDoc(ProjectOrion);

app.use('/api-docs-projectOrion', swaggerUi.serve, swaggerUi.setup(swaggerDocsProjectOrion, { explorer: true }))


console.log(process.env.POLICY_MAPPING);
// For json format parsing
app.use(express.json());
// For cross platform availability
app.use(cors());
// For parsing application/x-www-form-urlencoded
app.use(express.urlencoded({ extended: true }));

// HTTP Request Logger
app.use(mwHttpLogger());

// API success/error handler middleware
app.use(mwResponse());

let dt = new Date();

app.get('/', (req, res) => {
  res.status(200).send(`Healthy since ${dt.toString()}`);
});

app.use('/x_store', apiRoutes);

app.use('*', function(req, res) {
  res.error(response(ENDPOINT_NOT_FOUND));
});

module.exports = app;